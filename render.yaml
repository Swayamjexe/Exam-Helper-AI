# Render Blueprint configuration
# This file defines all services needed to deploy your application on Render.com

services:
  # Backend API Service
  - type: web
    name: exam-helper-api
    env: python
    region: oregon # Change to your preferred region
    plan: free # Change to paid plans for production
    buildCommand: |
      cd backend
      pip install -r requirements.txt
      python -c "from app import db; db.create_all()" # Initialize database
    startCommand: cd backend && gunicorn --bind 0.0.0.0:$PORT run:app
    healthCheckPath: /api/health
    envVars:
      - key: FLASK_ENV
        value: production
      - key: PYTHONPATH
        value: ./backend
      - key: FLASK_APP
        value: run.py
      - key: DATABASE_URL
        fromDatabase:
          name: exam-helper-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: exam-helper-redis
          type: redis
          property: connectionString
      # Reference the secret environment variables group
      - fromGroup: exam-helper-secrets

  # Frontend Static Site
  - type: web
    name: exam-helper-frontend
    env: static
    # Static sites don't support region selection
    buildCommand: |
      cd frontend
      npm install
      npm run build
    staticPublishPath: frontend/build
    headers:
      - path: /*
        name: Cache-Control
        value: no-cache
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
    envVars:
      # This sets the API URL to point to your backend service
      - key: REACT_APP_API_URL
        value: https://exam-helper-api.onrender.com

  # Celery Worker for Background Tasks
  - type: worker
    name: exam-helper-worker
    env: python
    region: oregon
    buildCommand: cd backend && pip install -r requirements.txt
    startCommand: cd backend && celery -A app.celery worker --loglevel=info
    envVars:
      - key: PYTHONPATH
        value: ./backend
      - key: FLASK_APP
        value: run.py
      - key: DATABASE_URL
        fromDatabase:
          name: exam-helper-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: exam-helper-redis
          type: redis
          property: connectionString
      - fromGroup: exam-helper-secrets

  # Redis service for Celery task queue
  - type: redis
    name: exam-helper-redis
    region: oregon
    plan: free # Change for production
    ipAllowList: ["0.0.0.0/0"] # Allow connections from all services

databases:
  # PostgreSQL Database (recommended for production)
  - name: exam-helper-db
    region: oregon
    plan: free # Change to a paid plan for production

# Environment Variable Groups
envVarGroups:
  - name: exam-helper-secrets
    envVars:
      # Security
      - key: JWT_SECRET_KEY
        generateValue: true # Render will generate a random secure value
      - key: SECRET_KEY
        generateValue: true
      
      # ChromaDB Configuration - Render will create a persistent disk mount
      - key: CHROMA_DB_PATH
        value: "/var/data/chroma_db" # Persistent storage path
      
      # Together AI API key
      - key: TOGETHER_API_KEY
        value: "" 
      
      # PDF Processing
      - key: UPLOAD_FOLDER
        value: "/var/data/uploads" # Persistent storage path